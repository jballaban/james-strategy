{"version":3,"file":"james-strategy.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC,yCAAyC,aAAa;AACvD,kCAAkC,iBAAiB;AACnD,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA,sDAAsD,cAAc,iBAAiB,iBAAiB;AACtG,KAAK,6CAA6C,iBAAiB;AACnE;AACA,GAAG;AACH,CAAC,aAAa;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB,8DAA8D;AAC9E,GAAG;AACH;AACA;AACA,gBAAgB,+DAA+D;AAC/E,GAAG;AACH;AACA;AACA,gBAAgB,4DAA4D;AAC5E,GAAG;AACH;AACA;AACA,gBAAgB,6DAA6D;AAC7E,GAAG;AACH;AACA;AACA,gBAAgB,gEAAgE;AAChF,GAAG;AACH;AACA;AACA,gBAAgB,kEAAkE;AAClF;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5F6D;AACL;AAClB;AACsB;AAC5D;AACA;AACA;AACA;AACA,UAAU,2BAA2B;AACrC;AACA,EAAE,iDAAQ;AACV;AACA;AACA;AACA,gBAAgB,4EAA4E;AAC5F,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,8EAA8E;AAC9F,KAAK;AACL,cAAc,YAAY;AAC1B,aAAa,UAAU;AACvB;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,sDAAS;AAChB,QAAQ,uDAAU,iBAAiB,uCAAuC;AAC1E,QAAQ,uDAAU,iBAAiB,uCAAuC,0DAA0D,uCAAuC;AAC3K;AACA;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B,sBAAsB,uEAAgB;AACtC;AACA;AACA,OAAO,sEAAiB;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpDqD;AACM;AACrB;AACtC;AACA;AACA;AACA;AACA,UAAU,2BAA2B;AACrC;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO,yDAAS;AAChB,IAAI,iDAAQ;AACZ,gBAAgB,0DAAU,iBAAiB,UAAU;AACrD,KAAK;AACL;AACA,OAAO,+DAAY,0BAA0B,4BAA4B;AACzE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA,UAAU,0BAA0B;AACpC;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;UC9BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;;;;;WCHA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD,sBAAsB,qCAAqC;AAC3D,sBAAsB,qCAAqC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAQ;AAC/B,4BAA4B,kEAAO,GAAO,EAAE,SAAS,IAAI,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAO,GAAO,EAAE,gCAAgC,IAAI,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D","sources":["webpack://james-strategy/./src/cards/AutoEntitiesCard.js","webpack://james-strategy/./src/cards/ChipsCard.js","webpack://james-strategy/./src/cards/MarkdownCard.js","webpack://james-strategy/./src/cards/VerticalStackCard.js","webpack://james-strategy/./src/settings.js","webpack://james-strategy/./src/views/DevicesView.js","webpack://james-strategy/./src/views/HomeView.js","webpack://james-strategy/./src/views/View.js","webpack://james-strategy/./src/views/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://james-strategy/webpack/bootstrap","webpack://james-strategy/webpack/runtime/define property getters","webpack://james-strategy/webpack/runtime/ensure chunk","webpack://james-strategy/webpack/runtime/hasOwnProperty shorthand","webpack://james-strategy/webpack/runtime/make namespace object","webpack://james-strategy/./src/strategy.js"],"sourcesContent":["class AutoEntitiesCard {\r\n\t\r\n\tconstructor(state, area_id, domain) {\r\n\t\tthis.state = state;\r\n\t\tthis.area_id = area_id;\r\n\t\tthis.domain = domain;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\tlet result = {\r\n\t\t\t\"type\": \"custom:auto-entities\",\r\n\t\t\t\"card\": {\r\n\t\t\t\t\"type\": \"entities\",\r\n\t\t\t\t\"title\": this.area_id\r\n\t\t\t},\r\n\t\t\t\"filter\": {\r\n\t\t\t\t\"template\": `\r\n{%- for entity in expand(area_entities('${this.area_id}'))\r\n\t\t\t\t |selectattr('domain','eq','${this.domain.name}')\r\n\t\t\t\t |selectattr('state','eq','${this.state}')\r\n\t\t\t\t |list -%} \r\n\t{{\r\n\t\t{\r\n\t\t\t'entity': entity.entity_id,\r\n\t\t\t'name': entity.attributes.friendly_name|replace(\"${this.area_id} \",\"\")|replace(\"${this.domain.name}\",\"\"),\r\n\t\t\t${JSON.stringify(this.domain.card).replace(/^\\{/,\"\").replace(/\\}$/,\"\")}\r\n\t\t}\r\n\t}},\r\n{%- endfor -%}`,\r\n\t\t\t},\r\n\t\t\t\"show_empty\": false\r\n\t\t};\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport {AutoEntitiesCard};","class TemplateChip {\r\n\t\r\n\tconstructor(content, icon) {\r\n\t\tthis.content = content;\r\n\t\tthis.icon = icon;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\treturn {\r\n\t\t\t\"type\": \"template\",\r\n\t\t\t\"content\": this.content,\r\n\t\t\t\"icon\": this.icon\r\n\t\t};\r\n\t}\r\n\r\n}\r\n\r\nclass EntityChip {\r\n\r\n\tconstructor(entity_id, icon, color, path) {\r\n\t\tthis.entity_id = entity_id;\r\n\t\tthis.icon = icon;\r\n\t\tthis.color = color;\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\tlet result = {\r\n\t\t\t\"type\": \"entity\",\r\n\t\t\t\"entity\": this.entity_id,\r\n\t\t\t\"icon\": this.icon,\r\n\t\t\t\"icon_color\": this.color\r\n\t\t};\r\n\t\tif (info.view.path !== this.path) {\r\n\t\t\tresult = {\r\n\t\t\t\t...result,\r\n\t\t\t\t\"tap_action\": {\r\n\t\t\t\t\t\"action\": \"navigate\",\r\n\t\t\t\t\t\"navigation_path\": this.path\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n\r\nclass ChipsCard {\r\n\t\r\n\tconstructor(chips) {\r\n\t\tthis.chips = chips;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\treturn {\r\n\t\t\t\"type\": \"custom:mushroom-chips-card\",\r\n\t\t\t\"chips\": this.chips.map(chip => {\r\n\t\t\t\treturn chip.render(info);\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\t\r\n}\r\n\r\nexport {ChipsCard, EntityChip, TemplateChip};","class MarkdownCard {\r\n\t\r\n\tconstructor(content) {\r\n\t\tthis.content = content;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\treturn {\r\n\t\t\t\"type\": \"markdown\",\r\n\t\t\t\"content\": this.content\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport {MarkdownCard};","class VerticalStackCard {\r\n\t\r\n\tconstructor(cards) {\r\n\t\tthis.cards = cards;\r\n\t}\r\n\r\n\trender(info) {\r\n\t\treturn {\r\n\t\t\t\"type\": \"vertical-stack\",\r\n\t\t\t\"cards\": this.cards\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport {VerticalStackCard};","export const settings = {\r\n\tdebug: true,\r\n\tareas: [\r\n\t\t\"Basement Bathroom\",\r\n\t\t\"Shop\",\r\n\t\t\"Gym\",\r\n\t\t\"Basement Hallway\",\r\n\t\t\"Rec Room\",\r\n\t\t\"Front Foyer\",\r\n\t\t\"Powder Room\",\r\n\t\t\"Bay Window\",\r\n\t\t\"Dining Room\",\r\n\t\t\"Hallway\",\r\n\t\t\"Mud Room\",\r\n\t\t\"Kitchen\",\r\n\t\t\"Family Room\",\r\n\t\t\"Garage\",\r\n\t\t\"Upstairs Hallway\",\r\n\t\t\"Master Bedroom\",\r\n\t\t\"Master Bathroom\",\r\n\t\t\"Laundry Room\",\r\n\t\t\"Office\",\r\n\t\t\"Lola Bedroom\",\r\n\t\t\"Lukas Bedroom\",\r\n\t\t\"Kids Bathroom\",\r\n\t\t\"Exterior\",\r\n\t\t\"Cabana\"\r\n\t],\r\n\tviews: [\r\n\t\t\"HomeView\",\r\n\t\t\"DevicesView\"\r\n\t],\r\n\tdomains: [\r\n\t\t{ \r\n\t\t\tname: \"light\", \r\n\t\t\ttitle: \"Lights\", \r\n\t\t\ton: \"on\", \r\n\t\t\toff: \"off\", \r\n\t\t\ticon: \"mdi:lightbulb\", \r\n\t\t\tcard: {\r\n\t\t\t\t\"type\": \"custom:mushroom-light-card\",\r\n\t\t\t\t\"show_brightness_control\": true,\r\n\t\t\t\t\"layout\": \"horizontal\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ \r\n\t\t\tname: \"fan\", \r\n\t\t\ttitle: \"Fans\", \r\n\t\t\ton: \"on\", \r\n\t\t\toff: \"off\", \r\n\t\t\ticon: \"mdi:fan\",\r\n\t\t\tcard: {\r\n\t\t\t\t\"type\": \"custom:mushroom-fan-card\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ \r\n\t\t\tname: \"cover\", \r\n\t\t\ttitle: \"Covers\", \r\n\t\t\ton: \"open\", \r\n\t\t\toff: \"closed\", \r\n\t\t\ticon: \"mdi:blinds\",\r\n\t\t\tcard: {\r\n\t\t\t\t\"type\": \"custom:mushroom-cover-card\"\r\n\t\t\t}\r\n\t\t},\r\n\t],\r\n\tsensors: [\r\n\t\t{\r\n\t\t\t\"name\": \"James Lights On\",\r\n\t\t\t\"state\": \"{{ states.light | selectattr('state','eq','on') | list | count }}\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"James Lights Off\",\r\n\t\t\t\"state\": \"{{ states.light | selectattr('state','eq','off') | list | count }}\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"James Fans On\",\r\n\t\t\t\"state\": \"{{ states.fan | selectattr('state','eq','on') | list | count }}\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"James Fans Off\",\r\n\t\t\t\"state\": \"{{ states.fan | selectattr('state','eq','off') | list | count }}\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"James Covers On\",\r\n\t\t\t\"state\": \"{{ states.cover | selectattr('state','eq','open') | list | count }}\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"James Covers Off\",\r\n\t\t\t\"state\": \"{{ states.cover | selectattr('state','eq','closed') | list | count }}\"\r\n\t\t}\r\n\t]\r\n}","import { AutoEntitiesCard } from \"cards/AutoEntitiesCard.js\";\r\nimport { ChipsCard, EntityChip } from \"cards/ChipsCard\";\r\nimport {settings } from \"settings.js\";\r\nimport { VerticalStackCard } from \"cards/VerticalStackCard\";\r\n\r\nclass DevicesView {\r\n\r\n\tasync generateViews(info) {\r\n\t\tconst { areas, devices, entities } = info.view.strategy.options;\r\n\t\tlet result = [];\r\n\t\tsettings.domains.forEach((item) => {\r\n\t\t\tresult.push({\r\n\t\t\t\tstrategy: {\r\n\t\t\t\t\ttype: \"custom:james\",\r\n\t\t\t\t\toptions: { areas, devices, entities, name: \"DevicesView\", domain: item, state: item.on},\r\n\t\t\t\t},\r\n\t\t\t\ttitle: item.title,\r\n\t\t\t\tpath: item.name,\r\n\t\t\t\ticon: item.icon\r\n\t\t\t});\r\n\t\t\tresult.push({\r\n\t\t\t\tstrategy: {\r\n\t\t\t\t\ttype: \"custom:james\",\r\n\t\t\t\t\toptions: { areas, devices, entities, name: \"DevicesView\", domain: item, state: item.off },\r\n\t\t\t\t},\r\n\t\t\t\ttitle: `${item.title} Off`,\r\n\t\t\t\tpath: `${item.name}_off`,\r\n\t\t\t\tsubview: true\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tasync generateCards(info) {\r\n\t\tlet result = [\r\n\t\t\tnew ChipsCard([\r\n\t\t\t\tnew EntityChip(`sensor.james_${info.view.strategy.options.domain.name}s_on`, info.view.strategy.options.domain.icon, \"yellow\", info.view.strategy.options.domain.name),\r\n\t\t\t\tnew EntityChip(`sensor.james_${info.view.strategy.options.domain.name}s_off`, info.view.strategy.options.domain.icon, \"red\", `${info.view.strategy.options.domain.name}_off`)\r\n\t\t\t]).render(info)\r\n\t\t];\r\n\t\t\r\n\t\tlet areaCards = [];\r\n\t\tfor (let area_id of settings.areas) {\r\n\t\t\tareaCards.push(new AutoEntitiesCard(info.view.strategy.options.state, area_id, info.view.strategy.options.domain).render(info));\r\n\t\t}\r\n\t\tresult.push(\r\n\t\t\tnew VerticalStackCard(areaCards).render(info)\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n\r\nexport {DevicesView};","import { MarkdownCard } from \"cards/MarkdownCard.js\";\r\nimport { ChipsCard, EntityChip } from \"cards/ChipsCard.js\";\r\nimport { settings } from 'settings.js'\r\n\r\nclass HomeView {\r\n\r\n\tasync generateViews(info) {\r\n\t\tconst { areas, devices, entities } = info.view.strategy.options;\r\n\t\treturn [{\r\n\t\t\tstrategy: {\r\n\t\t\t\ttype: \"custom:james\",\r\n\t\t\t\toptions: { areas, devices, entities, name: \"HomeView\" },\r\n\t\t\t},\r\n\t\t\ttitle: \"Home\",\r\n\t\t\tpath: \"home\",\r\n\t\t\ticon: \"mdi:home\"\r\n\t\t}];\r\n\t}\r\n\r\n\tasync generateCards(info) {\r\n\t\treturn [\r\n\t\t\tnew ChipsCard(\r\n\t\t\t\tsettings.domains.map(item => {\r\n\t\t\t\t\treturn new EntityChip(`sensor.james_${item.name}s_on`, item.icon, \"yellow\", item.name)\r\n\t\t\t\t})\r\n\t\t\t).render(info),\r\n\t\t\tnew MarkdownCard(`HomeView Generated at ${(new Date).toLocaleString()}`).render(info)\r\n\t\t];\r\n\t}\r\n\r\n}\r\n\r\nexport {HomeView};","class View {\r\n\r\n\tasync generateView(info) {\r\n\t\tconst { area, devices, entities } = info.view.strategy.options;\r\n\t}\r\n}\r\n\r\nexport {View}","var map = {\n\t\"./DevicesView.js\": [\n\t\t\"./src/views/DevicesView.js\",\n\t\t\"main\"\n\t],\n\t\"./HomeView.js\": [\n\t\t\"./src/views/HomeView.js\",\n\t\t\"main\"\n\t],\n\t\"./View.js\": [\n\t\t\"./src/views/View.js\",\n\t\t\"main\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/views lazy recursive ^\\\\.\\\\/.*\\\\.js$\";\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {settings} from \"settings.js\";\r\n\r\nclass JamesStrategy {\r\n\r\n\tstatic async generateDashboard(info) {\r\n\t\t// Query all data we need. We will make it available to views by storing it in strategy options.\r\n\t\tconst [areas, devices, entities] = await Promise.all([\r\n\t\t\tinfo.hass.callWS({ type: \"config/area_registry/list\" }),\r\n\t\t\tinfo.hass.callWS({ type: \"config/device_registry/list\" }),\r\n\t\t\tinfo.hass.callWS({ type: \"config/entity_registry/list\" }),\r\n\t\t]);\r\n\t\t\r\n\t\tinfo.view = {\r\n\t\t\tstrategy: {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tareas,\r\n\t\t\t\t\tdevices,\r\n\t\t\t\t\tentities\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet views = [];\r\n\r\n\t\tfor (let viewName of settings.views) {\r\n\t\t\tconst viewModule = await import(`views/${viewName}.js`);\r\n\t\t\tlet subviews = await new viewModule[viewName]().generateViews(info);\r\n\t\t\tviews.push(...subviews);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttitle: \"Generated Dashboard\",\r\n\t\t\tviews: views\r\n\t\t};\r\n\t}\r\n\r\n\tstatic async generateView(info) {\r\n\t\tconst viewModule = await import(`views/${info.view.strategy.options.name}.js`);\r\n\t\tlet cards = await new viewModule[info.view.strategy.options.name]().generateCards(info);\r\n\t\treturn {\r\n\t\t\t\"cards\": cards\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\ncustomElements.define(\"ll-strategy-james\", JamesStrategy);"],"names":[],"sourceRoot":""}